// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    conversations    Conversation[]
    sentMessages     Message[]      @relation("sender")
    receivedMessages Message[]      @relation("receiver")
}

model Conversation {
    id         String    @id @default(cuid())
    name       String?
    senderId   String
    receiverId String
    users      User[]
    messages   Message[]
    createdAt  DateTime  @default(now())
}

model Message {
    id             String       @id @default(cuid())
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
    text           String?
    image          String?
    sender         User         @relation(name: "sender", fields: [senderId], references: [id])
    senderId       String
    receiver       User         @relation(name: "receiver", fields: [receiverId], references: [id])
    receiverId     String
    conversation   Conversation @relation(fields: [conversationId], references: [id])
    conversationId String
}
